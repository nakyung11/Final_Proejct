labs(
title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Social Media Usage Frequency")
ggplot(data_freq_eng_group, aes(
x = as.factor(sm_usage_freq), fill = telehealth)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(
title = "Telehealth Usage by Social Media Usage Frequency",
x = "Social Media Usage Frequency",
y = "Count",
fill = "Telehealth Usage"
)
# Health Information Engagement Levels on Social Media X Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
geom_bar() +
theme_minimal() +
labs(
title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Health Information Engagement Levels\non Social Media")
# Social Media Usage Frequency x Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = as.factor(sm_usage_freq)))+
geom_bar() +
scale_fill_discrete(
labels = c("Never", "Less than once a month",
"A few times a month", "At least once a week",
"Almost every day")) +
theme_minimal() +
labs(
title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Social Media Usage Frequency")
ggplot(data_freq_eng_group, aes(
x = as.factor(sm_usage_freq), fill = telehealth)) +
geom_bar(position = "dodge") +
scale_x_discrete(
labels = c("Never", "<1/M",
"A few/M", "≥1/W",
"Every day")) +
theme_minimal() +
labs(
title = "Telehealth Usage by Social Media Usage Frequency",
x = "Social Media Usage Frequency",
y = "Count",
fill = "Telehealth Usage"
)
# Health Information Engagement Levels on Social Media X Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
geom_bar() +
theme_minimal() +
labs(
title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Health Information Engagement Levels\non Social Media")
# Social Media Usage Frequency x Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = as.factor(sm_usage_freq)))+
geom_bar() +
scale_fill_discrete(
labels = c("Never", "Less than once a month",
"A few times a month", "At least once a week",
"Almost every day")) +
theme_minimal() +
labs(
title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Social Media Usage Frequency")
ggplot(data_freq_eng_group, aes(
x = as.factor(sm_usage_freq), fill = telehealth)) +
geom_bar(position = "dodge") +
scale_x_discrete(
labels = c("Never", "<1/M",
"A few/M", "≥1/W",
"Every day")) +
theme_minimal() +
labs(
title = "Telehealth Usage by Social Media Usage Frequency",
x = "Social Media Usage Frequency",
y = "Count",
fill = "Telehealth Usage"
)
# Health Information Engagement Levels on Social Media X Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
geom_bar() +
theme_minimal() +
labs(
title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Health Information Engagement Levels\non Social Media")
ggplot(data_freq_eng_group,
aes(x = sm_health_eng_lev_group, fill = telehealth)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(
title = "Telehealth Usage by Health Information Engagement\nLevels on Social Media",
x = "Health Information Engagement Levels\non Social Media",
y = "Count",
fill = "Telehealth Usage"
)
# Social Media Usage Frequency x Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = as.factor(sm_usage_freq)))+
geom_bar() +
scale_fill_discrete(
labels = c("Never", "Less than once a month",
"A few times a month", "At least once a week",
"Almost every day")) +
theme_minimal() +
labs(
title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Social Media Usage Frequency")
ggplot(data_freq_eng_group, aes(
x = as.factor(sm_usage_freq), fill = telehealth)) +
geom_bar(position = "dodge") +
scale_x_discrete(
labels = c("Never", "<1/M",
"A few/M", "≥1/W",
"Every day")) +
theme_minimal() +
labs(
title = "Telehealth Usage by Social Media Usage Frequency",
x = "Social Media Usage Frequency",
y = "Count",
fill = "Telehealth Usage"
)
# Health Information Engagement Levels on Social Media X Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
geom_bar() +
theme_minimal() +
labs(
title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Health Information Engagement Levels\non Social Media")
ggplot(data_freq_eng_group,
aes(x = sm_health_eng_lev_group, fill = telehealth)) +
geom_bar(position = "dodge") +
arrange(sm_health_eng_lev_group) +
theme_minimal() +
labs(
title = "Telehealth Usage by Health Information Engagement\nLevels on Social Media",
x = "Health Information Engagement Levels\non Social Media",
y = "Count",
fill = "Telehealth Usage"
)
# Social Media Usage Frequency x Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = as.factor(sm_usage_freq)))+
geom_bar() +
scale_fill_discrete(
labels = c("Never", "Less than once a month",
"A few times a month", "At least once a week",
"Almost every day")) +
theme_minimal() +
labs(
title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Social Media Usage Frequency")
ggplot(data_freq_eng_group, aes(
x = as.factor(sm_usage_freq), fill = telehealth)) +
geom_bar(position = "dodge") +
scale_x_discrete(
labels = c("Never", "<1/M",
"A few/M", "≥1/W",
"Every day")) +
theme_minimal() +
labs(
title = "Telehealth Usage by Social Media Usage Frequency",
x = "Social Media Usage Frequency",
y = "Count",
fill = "Telehealth Usage"
)
# Health Information Engagement Levels on Social Media X Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
geom_bar() +
theme_minimal() +
labs(
title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Health Information Engagement Levels\non Social Media")
data_freq_eng_group$sm_health_eng_lev_group <- factor(
data_freq_eng_group$sm_health_eng_lev_group,
levels = c("Low", "Medium", "High"))
ggplot(data_freq_eng_group,
aes(x = sm_health_eng_lev_group, fill = telehealth)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(
title = "Telehealth Usage by Health Information Engagement\nLevels on Social Media",
x = "Health Information Engagement Levels\non Social Media",
y = "Count",
fill = "Telehealth Usage"
)
#| echo: false
#| include: false
library(tidyverse)
library(dplyr)
library(tidyr)
library(here)
library(rio)
library(knitr)
library(ggplot2)
# Load the file
file_path <- here("data", "hints6_public.rda")
load(file_path)
# Change the file name to 'hints'
hints <- public
# Selecting relevant columns for RQ1
health_data <- hints %>%
select(AgeGrpA, AgeGrpB, BirthGender, RaceEthn, RaceEthn5, RACE_CAT2, Education, IncomeRanges, ReceiveTelehealthCare)
# Combine Age groups into a single variable
health_data <- health_data %>%
mutate(Age = paste(AgeGrpA, AgeGrpB, sep = ", "))
# Standardize Ethnicity categories
health_data <- health_data %>%
mutate(Ethnicity = case_when(
RaceEthn %in% c("White", "Caucasian") ~ "White",
RaceEthn %in% c("Black", "African American") ~ "Black or African American",
RaceEthn %in% c("Hispanic", "Latino") ~ "Hispanic or Latino",
RaceEthn %in% c("Asian", "Pacific Islander") ~ "Asian or Pacific Islander",
TRUE ~ "Other"
))
# Rename columns
health_data <- health_data %>%
rename(Telehealth = ReceiveTelehealthCare,
Gender = BirthGender,
Income = IncomeRanges)
# Recoding responses for Telehealth
health_data <- health_data %>%
mutate(Telehealth = recode(Telehealth,
"No telehealth visits in the past 12 months" = "No",
"Yes, by video" = "Yes",
"Yes, by phone call (voice only with no video)" = "Yes",
"Yes, some by video and some by phone call" = "Yes",
"Missing data (Web partial - Question Never Seen)" = "Missing",
"Missing data (Not Ascertained)" = "Missing"))
# Remove rows with missing or invalid data
health_data_clean <- health_data %>%
filter(
!is.na(Telehealth) & Telehealth != "Missing",
!is.na(Gender),
!is.na(Education),
!is.na(Income),
!is.na(Ethnicity),
!is.na(Age))
# Pivot longer: Convert Age and Ethnicity into a longer format
health_data_long <- health_data_clean %>%
pivot_longer(cols = c(Age, Ethnicity),
names_to = "Variable",
values_to = "Value")
# Remove missing or "Missing" values in long format
health_data_long <- health_data_long %>%
filter(!is.na(Value) & Value != "Missing")
# Pivot wider: Recreate a wider format from the long dataset
health_data_wide <- health_data_long %>%
pivot_wider(names_from = Variable, values_from = Value)
# View the cleaned data in wide format
head(health_data_wide)
View(health_data_wide)
View(health_data_clean)
View(health_data_long)
# Function to summarize Telehealth usage by a given demographic variable
summarize_by_demographics <- function(data, variable) {
data %>%
group_by(!!sym(variable), Telehealth) %>%
summarize(
Count = n(),
.groups = "drop"
) %>%
arrange(!!sym(variable))
}
# Summarize by each demographic variable
gender_summary <- summarize_by_demographics(health_data_clean, "Gender")
ethnicity_summary <- summarize_by_demographics(health_data_clean, "Ethnicity")
education_summary <- summarize_by_demographics(health_data_clean, "Education")
income_summary <- summarize_by_demographics(health_data_clean, "Income")
age_summary <- summarize_by_demographics(health_data_clean, "Age")
# View summaries
gender_summary
ethnicity_summary
education_summary
income_summary
age_summary
#Descriptive Summar
summary(health_data_clean)
View(gender_summary)
View(ethnicity_summary)
View(age_summary)
# Selecting relevant columns for RQ2
data_nl <- hints %>%
select(HHID, ReceiveTelehealthCare, SocMed_Visited,
SocMed_WatchedVid, SocMed_Interacted, SocMed_SharedPers)
# Renaming each column
data_nl <- data_nl %>%
rename(telehealth = ReceiveTelehealthCare,
sm_usage_freq = SocMed_Visited,
sm_watching = SocMed_WatchedVid,
sm_interact =
SocMed_Interacted,
sm_sharing = SocMed_SharedPers)
# Recoding responses
data_nl <- data_nl %>%
mutate(telehealth =
recode(telehealth,
"No telehealth visits in the past 12 months" = "No",
"Yes, by video" = "Yes",
"Yes, by phone call (voice only with no video)" = "Yes",
"Yes, some by video and some by phone call" = "Yes",
"Missing data (Web partial - Question Never Seen)" =
"Missing", "Missing data (Not Ascertained)" =
"Missing"))
# Creating a dataset for 5 point Likert scale
data_nl_2 <- data_nl %>%
mutate(sm_usage_freq =
recode(sm_usage_freq,
"Never" = 1,
"Less than once a month" = 2,
"A few times a month" = 3,
"At least once a week" = 4,
"Almost every day" = 5,
"Missing data (Not Ascertained)" = NA_real_,
"Missing data (Web partial - Question Never Seen)" = NA_real_,
"Multiple responses selected in error" = NA_real_),
sm_watching = recode(sm_watching,
"Missing data (Not Ascertained)" = NA_real_,
"Missing data (Web partial - Question Never Seen)" = NA_real_,
"Never" = 1,
"Less than once a month" = 2,
"A few times a month" = 3,
"At least once a week" = 4,
"Almost every day" = 5),
sm_interact = recode(sm_interact,
"Missing data (Not Ascertained)" = NA_real_,
"Missing data (Web partial - Question Never Seen)" = NA_real_,
"Never" = 1,
"Less than once a month" = 2,
"A few times a month" = 3,
"At least once a week" = 4,
"Almost every day" = 5),
sm_sharing = recode(sm_sharing,
"Missing data (Not Ascertained)" = NA_real_,
"Missing data (Web partial - Question Never Seen)" = NA_real_,
"Multiple responses selected in error" = NA_real_,
"Never" = 1,
"Less than once a month" = 2,
"A few times a month" = 3,
"At least once a week" = 4,
"Almost every day" = 5)) %>%
filter(!is.na(sm_usage_freq)) %>%
filter(!is.na(sm_watching)) %>%
filter(!is.na(sm_interact)) %>%
filter(!is.na(sm_sharing)) %>%
filter(telehealth !="Missing")
# Reshape health-information-engagement-on-social-media categories into one longer engagement_type column
data_long <- data_nl_2 %>%
pivot_longer(cols = c(sm_watching, sm_interact, sm_sharing),
names_to = "engagement_type", values_to = "frequency")
# Low, medium, high grouping
data_long <- data_long %>%
group_by(HHID) %>%
mutate(total_sm_health_eng_lev = sum(frequency))
data_freq_eng_group <- data_long %>%
distinct(HHID, telehealth, sm_usage_freq, total_sm_health_eng_lev) %>%
mutate(sm_health_eng_lev_group =
case_when(
total_sm_health_eng_lev >= 3 &
total_sm_health_eng_lev <= 6 ~ "Low",
total_sm_health_eng_lev >= 7 &
total_sm_health_eng_lev <= 10 ~ "Medium",
total_sm_health_eng_lev >= 11 &
total_sm_health_eng_lev <= 15 ~ "High"))
# Social Media Usage Frequency x Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = as.factor(sm_usage_freq)))+
geom_bar() +
scale_fill_discrete(
labels = c("Never", "Less than once a month",
"A few times a month", "At least once a week",
"Almost every day")) +
theme_minimal() +
labs(
title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Social Media Usage Frequency")
ggplot(data_freq_eng_group, aes(
x = as.factor(sm_usage_freq), fill = telehealth)) +
geom_bar(position = "dodge") +
scale_x_discrete(
labels = c("Never", "<1/M",
"A few/M", "≥1/W",
"Every day")) +
theme_minimal() +
labs(
title = "Telehealth Usage by Social Media Usage Frequency",
x = "Social Media Usage Frequency",
y = "Count",
fill = "Telehealth Usage"
)
# Health Information Engagement Levels on Social Media X Telehealth
ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
geom_bar() +
theme_minimal() +
labs(
title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users",
x = "Telehealth", y = "Count",
fill = "Health Information Engagement Levels\non Social Media")
data_freq_eng_group$sm_health_eng_lev_group <- factor(
data_freq_eng_group$sm_health_eng_lev_group,
levels = c("Low", "Medium", "High"))
ggplot(data_freq_eng_group,
aes(x = sm_health_eng_lev_group, fill = telehealth)) +
geom_bar(position = "dodge") +
theme_minimal() +
labs(
title = "Telehealth Usage by Health Information Engagement\nLevels on Social Media",
x = "Health Information Engagement Levels\non Social Media",
y = "Count",
fill = "Telehealth Usage"
)
# Social Media Usage Frequency X Telehealth
summary_table_sm_freq <- data_freq_eng_group %>%
mutate(sm_usage_freq = case_when(
sm_usage_freq == 1 ~ "1 (Never)",
sm_usage_freq == 2 ~ "2 (Less than once a month)",
sm_usage_freq == 3 ~ "3 (A few times a month)",
sm_usage_freq == 4 ~ "4 (At least once a week)",
sm_usage_freq == 5 ~ "5 (Almost every day)")) %>%
group_by(telehealth, sm_usage_freq) %>%
summarize(Count = n()) %>%
mutate(Percentage = round(Count / sum(Count) * 100, 2)) %>%
rename(Telehealth = telehealth, SM_Usage_Freqency = sm_usage_freq)
kable(summary_table_sm_freq)
# Mean, Median, SD for Social Media Usage Frequency X Telehealth
summary_table_sm_freq_stats <- data_freq_eng_group %>%
group_by(telehealth) %>%
summarize(SM_Usage_Freq_Mean = round(mean(sm_usage_freq), 2),
Median = median(sm_usage_freq),
SD = round(sd(sm_usage_freq), 2),
Count = n()) %>%
rename(Telehealth = telehealth)
kable(summary_table_sm_freq_stats)
# Health Information Engagement Levels on Social Media X Telehealth
summary_table_eng_lev_group <- data_freq_eng_group %>%
group_by(telehealth, sm_health_eng_lev_group) %>%
summarize(Count = n()) %>%
mutate(Percentage = round(Count / sum(Count) * 100, 2)) %>%
rename(
Telehealth = telehealth,
SM_Health_Info_Eng = sm_health_eng_lev_group)
kable(summary_table_eng_lev_group)
# Mean, Median, SD for Health Information Engagement Levels on Social Media X Telehealth
summary_table_eng_lev_stats <- data_long %>%
group_by(telehealth) %>%
summarize(SM_Health_Info_Eng_Mean = round(mean(total_sm_health_eng_lev), 2),
Median = median(total_sm_health_eng_lev),
SD = round(sd(total_sm_health_eng_lev), 2)) %>%
rename(Telehealth = telehealth)
kable(summary_table_eng_lev_stats)
View(health_data_clean)
View(health_data_wide)
View(health_data_wide)
# Function to summarize and create barplots for demographic variables
create_summary_and_barplot <- function(data, variable) {
# Summarize data by demographic variable and Telehealth
summarized_data <- data %>%
group_by(!!sym(variable), Telehealth) %>%
summarize(Count = n(), .groups = "drop")
# Create barplot
ggplot(summarized_data, aes_string(x = variable, y = "Count", fill = "Telehealth")) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = paste(variable, "Distribution by Telehealth Usage"),
x = variable,
y = "Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
)
}
# List of variables for RQ1
demographic_vars <- c("Age", "Gender", "Ethnicity", "Education", "Income")
# Loop through the demographic variables and generate barplots
for (var in demographic_vars) {
print(create_summary_and_barplot(health_data_clean, var))
}
View(health_data_clean)
View(health_data)
# Proportions for demographic groups by Telehealth
summary_table_demographic_group <- health_data_clean %>%
pivot_longer(cols = c(Age, Gender, Ethnicity, Education, Income),
names_to = "Demographic_Variable",
values_to = "Group") %>%
group_by(Telehealth, Demographic_Variable, Group) %>%
summarize(count = n(), .groups = "drop") %>%
mutate(percentage = round(count / sum(count) * 100, 2))
# Display the summary table
kable(summary_table_demographic_group, format = "markdown")
summary_table_demographic_stats <- health_data_clean %>%
summarize(
age_mean = round(mean(as.numeric(as.factor(Age)), na.rm = TRUE), 2),
age_median = median(as.numeric(as.factor(Age)), na.rm = TRUE),
age_sd = round(sd(as.numeric(as.factor(Age)), na.rm = TRUE), 2),
education_mean = round(mean(as.numeric(as.factor(Education)), na.rm = TRUE), 2),
education_median = median(as.numeric(as.factor(Education)), na.rm = TRUE),
education_sd = round(sd(as.numeric(as.factor(Education)), na.rm = TRUE), 2),
income_mean = round(mean(as.numeric(as.factor(Income)), na.rm = TRUE), 2),
income_median = median(as.numeric(as.factor(Income)), na.rm = TRUE),
income_sd = round(sd(as.numeric(as.factor(Income)), na.rm = TRUE), 2),
.groups = "drop"
)
# Display the summary table
kable(summary_table_demographic_stats, format = "markdown")
