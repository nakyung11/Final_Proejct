---
title: "Final_Project"
author: "Songyi Ahn, Nakyung Lee, Nishat Parvez"
format:
  html:
   highlight-style: tango
   code-fold: true
   toc: true
   toc-depth: 5
   toc-location: left
execute:
  echo: true
  eval: true
  warning: false
  message: false
editor: visual
---


# Common Work

## Loading Packages


```{r}
#| echo: false
#| include: false

library(tidyverse)
library(here)
library(rio)
library(knitr)
```


## Loading and Renaming the dataset


```{r}
# Load the file
file_path <- here("data", "hints6_public.rda")
load(file_path)

# Change the file name to 'hints'
hints <- public
```


# RQ1. What is the distribution of demographic/socio-economic categories, including age, gender, ethnicity, education, and income level, among individuals who do and do not use Telehealth services?

## RQ1_1. Data Cleaning


```{r}

# Select relevant columns for RQ1
health_data <- hints %>%
  select(AgeGrpB, BirthGender, RACE_CAT2, HISP_CAT, Education, IncomeRanges, ReceiveTelehealthCare)

# Recode, rename variables, and handle missing data
health_data_clean <- health_data %>%
  mutate(
    # Recode Telehealth
    Telehealth = recode(
      ReceiveTelehealthCare,
      "No telehealth visits in the past 12 months" = "No",
      "Yes, by video" = "Yes",
      "Yes, by phone call (voice only with no video)" = "Yes",
      "Yes, some by video and some by phone call" = "Yes",
      "Missing data (Web partial - Question Never Seen)" = NA_character_,
      "Missing data (Not Ascertained)" = NA_character_
    ),
    
    # Recode Age
    Age = recode(
      AgeGrpB,
      "1" = "18-24",
      "2" = "25-34",
      "3" = "35-44",
      "4" = "45-54",
      "5" = "55-64",
      "6" = "65-74",
      "7" = "75+",
      "Missing Data (Not Ascertained)" = NA_character_, 
      "Unreadable or Nonconforming Numeric Response" = NA_character_
    ),
    
    # Recode Gender
    Gender = recode(
      BirthGender,
      "1" = "Male",
      "2" = "Female",
      "Missing data (Not Ascertained)" = NA_character_
    ),
    
    # Recode Education
    Education = recode(
      Education,
      "Less than 8 years" = "Low Education",
      "8 through 11 years" = "Low Education",      
      "12 years or completed high school" = "Medium Education",
      "Post high school training other than college (vocational or" = "Medium Education",
      "Some college" = "High Education",
      "College graduate" = "High Education",         
      "Postgraduate" = "High Education",    
      "Missing data (Not Ascertained)" = NA_character_,
      "Missing data (Web partial - Question Never Seen)" = NA_character_
    ),
    
    # Recode Income
    Income = recode(
      IncomeRanges,
      "$0 to $9,999" = "<$10K",
      "$10,000 to $14,999" = "$10K-$14K",
      "$15,000 to $19,999" = "$15K-$19K",
      "$20,000 to $34,999" = "$20K-$34K",
      "$35,000 to $49,999" = "$35K-$49K",
      "$50,000 to $74,999" = "$50K-$74K",
      "$75,000 to $99,999" = "$75K-$99K",
      "$100,000 and $199,999" = "$100K-$199K",
      "$200,000 or more" = "$200K",
      "Missing data (Not Ascertained)" = NA_character_,
      "Missing data (Web partial - Question Never Seen)" = NA_character_
    ),
    
    # Recode Ethnicity
    Ethnicity = recode(
      HISP_CAT,
      "Mexican only" = "Hispanic",
      "Cuban only" = "Hispanic",
      "Puerto Rican only" = "Hispanic",
      "Other Hispanic only" = "Other Hispanic or Latino/a",
      "Not Hispanic only" = NA_character_,
      "Multiple Hispanic ethnicities selected" = NA_character_,
      "Missing data (Not Ascertained)" = NA_character_,
      "Missing data (Web partial - Question Never Seen)" = NA_character_
    ) %>% 
      coalesce(recode(
        RACE_CAT2,
        "White only" = "White",
        "Black only" = "Black",
        "Filipino only" = "Asian or Pacific Islander",
        "Chinese only" = "Asian or Pacific Islander",
        "Asian Indian only" = "Asian or Pacific Islander",
        "Other Asian only" = "Asian or Pacific Islander",
        "Asian only" = "Asian or Pacific Islander",
        "Vietnamese only" = "Asian or Pacific Islander",
        "Other Pacific Islander only" = "Asian or Pacific Islander",
        "American Indian or Alaska Native only" = "Native American",
        "Missing data (Not Ascertained)" = NA_character_,
        "Missing data (Web partial - Question Never Seen)" = NA_character_,
        "Multiple races selected" = NA_character_
      ))
  ) %>%
  # Drop unnecessary columns
  select(-AgeGrpB, -RACE_CAT2, -HISP_CAT, -BirthGender, -IncomeRanges, -ReceiveTelehealthCare) %>%
  na.omit()

# Transform data using pivot_longer and pivot_wider
# Pivot longer
health_data_long <- health_data_clean %>%
  pivot_longer(
    cols = everything(),
    names_to = "Variable",
    values_to = "Value"
  ) %>%
  filter(!is.na(Value))

# Pivot wider back to the original structure
health_data_wide <- health_data_long %>%
  pivot_wider(
    names_from = Variable,
    values_from = Value
  )

# View the cleaned dataset
head(health_data_clean)


```


## RQ1_2: Data Visualization


```{r}

# List of demographic variables to visualize
demographic_vars <- c("Age", "Gender", "Education", "Income", "Ethnicity")

# Function to create and display ggplot for each demographic variable
create_telehealth_plot <- function(data, var) {
  # Remove missing data for the current variable
  data <- data %>%
    filter(!is.na(!!sym(var)), !is.na(Telehealth)) %>%
    group_by(!!sym(var), Telehealth) %>%
    summarise(count = n(), .groups = "drop") %>%
    mutate(percentage = count / sum(count) * 100) # Calculate percentages
  
  ggplot(data, aes_string(x = var, y = "count", fill = "Telehealth")) +
    geom_bar(stat = "identity", position = "dodge", color = "black", width = 0.7) + # Bar chart
    geom_text(
      aes(label = paste0(round(percentage, 1), "%")), # Display percentages on bars
      position = position_dodge(width = 0.7), 
      vjust = -0.3, size = 3.5 # Adjust position and size of text
    ) +
    labs(
      title = paste("Telehealth Usage by", var),
      x = var,
      y = "Number of Responses",
      fill = "Telehealth Usage"
    ) +
    scale_fill_brewer(palette = "Set2") + # Use a colorblind-friendly palette
    theme_minimal(base_size = 14) + # Use a clean theme with larger base font size
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1), # Rotate x-axis labels for readability
      axis.title = element_text(face = "bold"), # Bold axis titles
      plot.title = element_text(hjust = 0.5, face = "bold", size = 16), 
    # Center and bold title
      legend.position = "top", # Place legend at the top
      legend.title = element_text(face = "bold") # Bold legend title
    )}
# Loop through each demographic variable and create a plot
plots <- lapply(demographic_vars, function(var) {
  create_telehealth_plot(health_data_clean, var)})

# Display the plots
for (plot in plots) {
  print(plot)}
```


## RQ1_3: Summary Statistics


```{r}

# Grouped summary for demographics and telehealth usage
summary_table_demographics <- health_data_clean %>%
  group_by(Telehealth, Age, Gender, Education, Income, Ethnicity) %>%
  summarize(count = n(), .groups = "drop") %>%
  mutate(percentage = round(count / sum(count) * 100, 2))

# Display the demographic summary table
kable(summary_table_demographics, caption = "Summary of Telehealth Usage by Demographics")

# Summary statistics for Telehealth usage
summary_table_telehealth_stats <- health_data_clean %>%
  group_by(Telehealth) %>%
  summarize(
    Age_mean = round(mean(as.numeric(Age), na.rm = TRUE), 2),
    Age_median = median(as.numeric(Age), na.rm = TRUE),
    Age_sd = round(sd(as.numeric(Age), na.rm = TRUE), 2),
    
    Education_mean = round(mean(as.numeric(Education), na.rm = TRUE), 2),
    Education_median = median(as.numeric(Education), na.rm = TRUE),
    Education_sd = round(sd(as.numeric(Education), na.rm = TRUE), 2),
    
    Income_mean = round(mean(as.numeric(as.factor(Income)), na.rm = TRUE), 2),
    Income_median = median(as.numeric(as.factor(Income)), na.rm = TRUE),
    Income_sd = round(sd(as.numeric(as.factor(Income)), na.rm = TRUE), 2)
  )

# Display the summary statistics table
kable(summary_table_telehealth_stats, caption = "Summary Statistics for Telehealth Usage")

```


# RQ2. How do social media usage frequency and health information engagement levels on social media (low, medium, high) differ between individuals who use and do not use Telehealth services?

## RQ2_1. Data Cleaning


```{r}
# Selecting relevant columns for RQ2

data_nl <- hints %>% 
  select(HHID, ReceiveTelehealthCare, SocMed_Visited, 
         SocMed_WatchedVid, SocMed_Interacted, SocMed_SharedPers)

# Renaming each column

data_nl <- data_nl %>% 
  rename(telehealth = ReceiveTelehealthCare, 
         sm_usage_freq = SocMed_Visited, 
         sm_watching = SocMed_WatchedVid, 
         sm_interact =
        SocMed_Interacted, 
        sm_sharing = SocMed_SharedPers)

# Recoding responses

data_nl <- data_nl %>% 
  mutate(telehealth = 
           recode(telehealth, 
                  "No telehealth visits in the past 12 months" = "No", 
                  "Yes, by video" = "Yes", 
                  "Yes, by phone call (voice only with no video)" = "Yes", 
                  "Yes, some by video and some by phone call" = "Yes", 
                  "Missing data (Web partial - Question Never Seen)" = 
                  "Missing", "Missing data (Not Ascertained)" = 
                  "Missing"))

# Creating a dataset for 5 point Likert scale

data_nl_2 <- data_nl %>% 
  mutate(sm_usage_freq = 
           recode(sm_usage_freq, 
                  "Never" = 1, 
                  "Less than once a month" = 2, 
                  "A few times a month" = 3, 
                  "At least once a week" = 4, 
                  "Almost every day" = 5, 
                  "Missing data (Not Ascertained)" = NA_real_, 
                  "Missing data (Web partial - Question Never Seen)" = NA_real_, 
                  "Multiple responses selected in error" = NA_real_), 
         sm_watching = recode(sm_watching, 
                     "Missing data (Not Ascertained)" = NA_real_, 
                     "Missing data (Web partial - Question Never Seen)" = NA_real_, 
                     "Never" = 1, 
                     "Less than once a month" = 2, 
                     "A few times a month" = 3, 
                     "At least once a week" = 4, 
                     "Almost every day" = 5), 
         sm_interact = recode(sm_interact, 
                     "Missing data (Not Ascertained)" = NA_real_, 
                     "Missing data (Web partial - Question Never Seen)" = NA_real_, 
                     "Never" = 1, 
                     "Less than once a month" = 2, 
                     "A few times a month" = 3, 
                     "At least once a week" = 4, 
                     "Almost every day" = 5), 
         sm_sharing = recode(sm_sharing, 
                    "Missing data (Not Ascertained)" = NA_real_, 
                    "Missing data (Web partial - Question Never Seen)" = NA_real_, 
                    "Multiple responses selected in error" = NA_real_, 
                    "Never" = 1, 
                    "Less than once a month" = 2, 
                    "A few times a month" = 3, 
                    "At least once a week" = 4, 
                    "Almost every day" = 5)) %>% 
  filter(!is.na(sm_usage_freq)) %>% 
  filter(!is.na(sm_watching)) %>% 
  filter(!is.na(sm_interact)) %>% 
  filter(!is.na(sm_sharing)) %>% 
  filter(telehealth !="Missing")
```


## RQ2_2. Grouping by Health Information Engagement Levels on Social Media: pivot_longer()


```{r}
# Reshape health-information-engagement-on-social-media categories into one longer engagement_type column

data_long <- data_nl_2 %>% 
  pivot_longer(cols = c(sm_watching, sm_interact, sm_sharing), 
               names_to = "engagement_type", values_to = "frequency")

# Low, medium, high grouping

data_long <- data_long %>% 
  group_by(HHID) %>% 
  mutate(total_sm_health_eng_lev = sum(frequency))

data_freq_eng_group <- data_long %>% 
  distinct(HHID, telehealth, sm_usage_freq, total_sm_health_eng_lev) %>% 
  mutate(sm_health_eng_lev_group = 
           case_when(
             total_sm_health_eng_lev >= 3 & 
               total_sm_health_eng_lev <= 6 ~ "Low",
             total_sm_health_eng_lev >= 7 & 
               total_sm_health_eng_lev <= 10 ~ "Medium",
             total_sm_health_eng_lev >= 11 & 
               total_sm_health_eng_lev <= 15 ~ "High"))
```


## RQ2_3. Data Visualization


```{r}
# Social Media Usage Frequency x Telehealth

ggplot(data_freq_eng_group, aes(x = telehealth, fill = as.factor(sm_usage_freq)))+
         geom_bar() +
  scale_fill_discrete(
    labels = c("Never", "Less than once a month", 
               "A few times a month", "At least once a week", 
               "Almost every day")) +
         theme_minimal() +
  labs(
    title = "Social Media Usage Frequency\nAmong Telehealth Users and Non-Users", 
       x = "Telehealth", y = "Count", 
       fill = "Social Media Usage Frequency")

ggplot(data_freq_eng_group, aes(
  x = as.factor(sm_usage_freq), fill = telehealth)) +
  geom_bar(position = "dodge") +
   scale_x_discrete(
    labels = c("Never", "<1/M", 
               "A few/M", "≥1/W", 
               "Every day")) +
        theme_minimal() +
    labs(
      title = "Telehealth Usage by Social Media Usage Frequency",
      x = "Social Media Usage Frequency",
      y = "Count",
      fill = "Telehealth Usage"
    )

# Health Information Engagement Levels on Social Media X Telehealth

ggplot(data_freq_eng_group, aes(x = telehealth, fill = sm_health_eng_lev_group)) +
  geom_bar() +
  theme_minimal() +
  labs(
    title = "Health Information Engagement Levels on Social Media\n Among Telehealth Users and Non-Users", 
    x = "Telehealth", y = "Count", 
    fill = "Health Information Engagement Levels\non Social Media")
  
ggplot(data_freq_eng_group, 
       aes(x = sm_health_eng_lev_group, fill = telehealth)) +
    geom_bar(position = "dodge") +
    theme_minimal() +
    labs(
      title = "Telehealth Usage by Health Information Engagement\nLevels on Social Media", 
      x = "Health Information Engagement Levels\non Social Media",
      y = "Count",
      fill = "Telehealth Usage"
    )
```


## RQ2_4. Summary Statistics


```{r}
# Social Media Usage Frequency X Telehealth 

summary_table_sm_freq <- data_freq_eng_group %>% 
  mutate(sm_usage_freq = case_when(
      sm_usage_freq == 1 ~ "1 (Never)",
      sm_usage_freq == 2 ~ "2 (Less than once a month)",
      sm_usage_freq == 3 ~ "3 (A few times a month)",
      sm_usage_freq == 4 ~ "4 (At least once a week)",
      sm_usage_freq == 5 ~ "5 (Almost every day)")) %>% 
  group_by(telehealth, sm_usage_freq) %>% 
  summarize(Count = n()) %>% 
  mutate(Percentage = round(Count / sum(Count) * 100, 2)) %>% 
  rename("Telehealth" = telehealth, "SM Usage Freqency" = sm_usage_freq) 

kable(summary_table_sm_freq, caption = "1. Telehealth & Social Media Usage Frequency")

summary_table_sm_freq_2 <- data_freq_eng_group %>% 
  group_by(telehealth, sm_usage_freq) %>% 
  summarize(Count = n()) %>% 
  pivot_wider(names_from = sm_usage_freq, values_from = Count) %>% 
  rename("Telehealth" = telehealth)

kable(summary_table_sm_freq_2, caption = "2. Telehealth & Social Media Usage Frequency")

# Mean, Median, SD for Social Media Usage Frequency X Telehealth

summary_table_sm_freq_stats <- data_freq_eng_group %>% 
  group_by(telehealth) %>% 
  summarize(SM_Usage_Freq_Mean = round(mean(sm_usage_freq), 2), 
            Median = median(sm_usage_freq), 
            SD = round(sd(sm_usage_freq), 2), 
            Count = n()) %>% 
  rename("Telehealth" = telehealth, "Mean" = SM_Usage_Freq_Mean)

kable(summary_table_sm_freq_stats, caption = "Mean, Median, SD for Social Media Usage Frequency by Telehealth")

# Health Information Engagement Levels on Social Media X Telehealth

summary_table_eng_lev_group <- data_freq_eng_group %>% 
  group_by(telehealth, sm_health_eng_lev_group) %>% 
  summarize(Count = n()) %>% 
  mutate(Percentage = round(Count / sum(Count) * 100, 2)) %>% 
  rename(
    "Telehealth" = telehealth, 
    "HI SM Eng" = sm_health_eng_lev_group) 

kable(summary_table_eng_lev_group, caption = "1. Telehealth & HI SM Engagement Level")

summary_table_eng_lev_group_2 <- data_freq_eng_group %>% 
  group_by(telehealth, sm_health_eng_lev_group) %>% 
  summarize(Count = n()) %>% 
  pivot_wider(names_from = sm_health_eng_lev_group, values_from = Count) %>% 
  rename("Telehealth" = telehealth)

kable(summary_table_eng_lev_group_2, caption = "2. Telehealth & HI SM Engagement Level")

# Mean, Median, SD for Health Information Engagement Levels on Social Media X Telehealth

summary_table_eng_lev_stats <- data_long %>% 
  group_by(telehealth) %>% 
  summarize(SM_Health_Info_Eng_Mean = round(mean(total_sm_health_eng_lev), 2), 
            Median = median(total_sm_health_eng_lev), 
            SD = round(sd(total_sm_health_eng_lev), 2)) %>% 
  rename("Telehealth" = telehealth, "Mean" = SM_Health_Info_Eng_Mean) 

kable(summary_table_eng_lev_stats, caption = "Mean, Median, SD for HI SM Engagement Level by Telehealth")
```


# RQ3. How does the distribution of cancer-related risk perception groups (low, medium, high) compare between individuals who use and do not use Telehealth services?

## RQ3_1. Data Cleaning


```{r}
# Selecting relevant columns for RQ3
cancer <- hints %>% 
  select(HHID, ReceiveTelehealthCare, InterestedCaScreening, FreqWorryCancer, ChanceGetCancer2, EverythingCauseCancer, PreventNotPossible)

# Renaming each column
cancer <- cancer %>% 
  rename(telehealth = ReceiveTelehealthCare, 
         screening = InterestedCaScreening, 
         worry = FreqWorryCancer, 
         chance = ChanceGetCancer2, 
         cause = EverythingCauseCancer, 
         prevent = PreventNotPossible)

# Recoding responses
cancer <- cancer %>% 
  mutate(telehealth = 
           recode(telehealth, 
                  "No telehealth visits in the past 12 months" = "No", 
                  "Yes, by video" = "Yes", 
                  "Yes, by phone call (voice only with no video)" = "Yes", 
                  "Yes, some by video and some by phone call" = "Yes", 
                  "Missing data (Web partial - Question Never Seen)" = "Missing", 
                  "Missing data (Not Ascertained)" = "Missing"))

# Creating a dataset for 5 point Likert scale
cancer_2 <- cancer %>% 
  mutate(screening = 
           recode(screening, 
                  "Missing data (Not Ascertained)" = NA_real_, 
                  "Missing data (Web partial - Question Never Seen)" = NA_real_, 
                  "Multiple responses selected in error" = NA_real_, 
                  "Not at all" = 1, 
                  "A little" = 2, 
                  "Somewhat" = 3, 
                  "Very" = 4, 
                  "Not applicable/I am up-to-date with screening tests" = 5), 
         worry = 
           recode(worry, 
                  "Missing data (Not Ascertained)" = NA_real_, 
                  "Missing data (Web partial - Question Never Seen)" = NA_real_,
                  "Multiple responses selected in error" = NA_real_,
                  "Not at all" = 1, 
                  "Slightly" = 2, 
                  "Somewhat" = 3, 
                  "Moderately" = 4, 
                  "Extremely" = 5), 
         chance = 
           recode(chance, 
                  "Missing data (Not Ascertained)" = NA_real_, 
                  "Missing data (Web partial - Question Never Seen)" = NA_real_,
                  "Multiple responses selected in error" = NA_real_,
                  "I already had cancer" = NA_real_,
                  "I don't know" = NA_real_,
                  "Very unlikely" = 1, 
                  "Unlikely" = 2, 
                  "Neither likely nor unlikely" = 3, 
                  "Likely" = 4, 
                  "Very likely" = 5), 
         cause = 
           recode(cause, 
                  "Missing data (Not Ascertained)" = NA_real_, 
                  "Missing data (Web partial - Question Never Seen)" = NA_real_,
                  "Multiple responses selected in error" = NA_real_,
                  "Strongly disagree" = 1, 
                  "Somewhat disagree" = 2, 
                  "Somewhat agree" = 4, 
                  "Strongly agree" = 5), 
         prevent = 
           recode(prevent, 
                  "Missing data (Not Ascertained)" = NA_real_, 
                  "Missing data (Web partial - Question Never Seen)" = NA_real_, 
                  "Multiple responses selected in error" = NA_real_, 
                  "Strongly disagree" = 1, 
                  "Somewhat disagree" = 2, 
                  "Somewhat agree" = 4, 
                  "Strongly agree" = 5)) %>% 
  filter(!is.na(screening)) %>% 
  filter(!is.na(worry)) %>% 
  filter(!is.na(chance)) %>% 
  filter(!is.na(cause)) %>%
  filter(!is.na(prevent)) %>%
  filter(telehealth !="Missing")
```


## RQ3_2. Grouping by Cancer Risk Perception Groups


```{r}
# Reshape cancer risk perceptions into one longer column
cancer_long <- cancer_2 %>% 
  pivot_longer(
    cols = c(screening, worry, chance, cause, prevent), 
    names_to = "riskperceptiontype", 
    values_to = "riskperceptiondegree"
  )

# Low, medium, high grouping
cancer_long <- cancer_long %>% 
  group_by(HHID) %>% 
  mutate(riskperceptionlevel = mean(riskperceptiondegree, na.rm = TRUE))

# Keeping only one risk perception degree value per household id
cancer_risk_group <- cancer_long %>% 
  distinct(HHID, telehealth, riskperceptionlevel) %>% 
  mutate(risk_group = 
           case_when(
             riskperceptionlevel <= 1.67 ~ "Low", 
             riskperceptionlevel <= 3.33 ~ "Medium", 
             riskperceptionlevel <= 5 ~ "High"))
```


## RQ3_3. Data Visualization


```{r}
# Cancer Risk Levels X Telehealth
cancer_risk_group %>%
  mutate(risk_group = factor(risk_group, levels = c("Low", "Medium", "High"))) %>%
  ggplot(aes(x = risk_group, fill = telehealth)) +
  geom_bar(position = "dodge") +
  theme_minimal() +
  labs(title = "Telehealth Usage by Cancer Risk Perception Levels", 
       x = "Cancer Risk Perception Level", 
       y = "Number of Responses", 
       fill = "Telehealth Usage")
```


## RQ3_4. Summary Statistics


```{r}
# Cancer Risk Levels X Telehealth
summary_table_cancer_risk_group <- cancer_risk_group %>% 
  group_by(telehealth, risk_group) %>% 
  summarize(count = n()) %>% 
  mutate(percentage = round(count/sum(count)*100, 2))
kable(summary_table_cancer_risk_group)

# Mean, Median, SD for SME X Telehealth
summary_table_cancer_risk_stats <- cancer_long %>% 
  group_by(telehealth) %>% 
  summarize(riskperception_mean = round(mean(riskperceptiondegree), 2), 
            riskperception_median = median(riskperceptiondegree), 
            riskperception_sd = round(sd(riskperceptiondegree), 2))
kable(summary_table_cancer_risk_stats)
```

